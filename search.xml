<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>博客搭建总结</title>
      <link href="2021/04/20/bo-ke-da-jian-zong-jie/"/>
      <url>2021/04/20/bo-ke-da-jian-zong-jie/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h2><ol><li><p>下载安装nodejs(包含了Nodejs、npm)  <a href="https://nodejs.org/">去node官网</a></p><ul><li>记住安装目录后面有用,我的是F:\nodejs</li><li>验证命令：node -v ; npm -v (安装成功将返回版本号 Vxx.xx.x)。</li></ul></li><li><p>修改npm配置</p><ul><li>程序默认会将npm下载的文件保存到C盘,所以这里对它进行修改。</li><li>在安装node的文件夹(我的是F:\nodejs),新建node_global;node_cache文件夹。</li><li>改变模块和缓存目录到刚刚新建的文件夹,命令：<ul><li>npm config set prefix “node_global文件的路径”</li><li>npm config set cache “node_cache的文件路径”</li></ul></li></ul></li><li><p>环境变量</p><ol><li>系统变量 (注意不是用户变量！！)<ul><li>新建变量名NODE_PATH,变量值就是node的安装目录(我的是F:\nodejs)。</li><li>变量为Path的变量值后面添加    %NODE_PATH%,用英文符号’;’分割。(这里有重复的路径可以删掉，不懂的话可以不删)。</li></ul></li><li>用户变量<ul><li>在用户变量Path中添加node_global(我的是F:\nodejs\node_global),即nodejs安装目录下的node_global文件夹。</li></ul></li><li>测试<ul><li>cmd输入node,回车运行之后,再键入require(‘cluster’),将会输出三十行左右数据，返回一两行就是不对的。</li><li>注意检查自己的配置步骤,符号是不是英文符,以及路径是否正确。</li></ul></li></ol></li></ol><h2 id="cnpm"><a href="#cnpm" class="headerlink" title="cnpm"></a>cnpm</h2><h3 id="镜像源指向淘宝"><a href="#镜像源指向淘宝" class="headerlink" title="镜像源指向淘宝"></a>镜像源指向淘宝</h3><ol><li>命令:<br> ‘npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org&amp;/#39;">https://registry.npm.taobao.org'</a></li><li>测试: cnpm -v 查看版本。</li><li>cnpm install -g hexo-cli</li><li>hexo -v 验证版本。</li></ol><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><h3 id="去Git官网"><a href="#去Git官网" class="headerlink" title="去Git官网"></a><a href="https://git-scm.com/">去Git官网</a></h3><ol><li>一路安装,多选的界面不懂的话可以全选。</li><li>注意adjusting your PATH environment这个界面,它是会修改环境变量的,可以选择Use Git from Git…</li><li>建议测试node -v,npm -v以及node–&gt;require(‘cluster’)这三个命令是否正常(错误的话一般是PATH environment被修改，可以回到环境变量部分对比)。</li></ol><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><ol><li>新建一个自己存放博客的文件夹,进去文件夹之后鼠标右键–&gt;Git Bash Here</li><li>Linux命令:sudo hexo init   Windows：hexo init(报错的话hexo init -s)。</li><li>查看博客文件夹是否有生成数据(hexo框架内容)。</li><li>命令hexo s 启动博客,将返回一个链接(localhost:4000),打开将会看到hexo初始化页面。</li><li>按两下ctrl c结束退出。</li><li>hexo n “hello hexo”,创建你好hello hexo.md文件,将返回创建文件的路径。</li><li>创建之后要更新博客。hexo clean清理,hexo -g生成。</li></ol><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="去GitHub官网-当然也可以是Gitee"><a href="#去GitHub官网-当然也可以是Gitee" class="headerlink" title="去GitHub官网,当然也可以是Gitee"></a><a href="https://github.com/">去GitHub官网</a>,当然也可以是Gitee</h3><ol><li><p>仓库命名必须是’Owner’.github.io,这里’Owner’替换成你GitHub的用户名。</p></li><li><p>git部署插件安装:cnpm install –sava hexo-deployer-git</p></li><li><p>SSH连接Github</p><ul><li> $cd ~/.ssh#,查看本机是否存在SSH keys</li><li>$ssh-keygen -t rsa -C “<a href="mailto:your_email@example.com">your_email@example.com</a>“ 创建密钥</li><li>clip &lt; ~/.ssh/id_rsa.pub 复制公钥</li><li>添加GitHub的SSH中</li><li>测试命令:$ssh -T <a href="mailto:git@github.com">git@github.com</a></li></ul></li><li><p>配置连接</p><ul><li>git config –global user.name “xxxx”</li><li>git config –global user.email “<a href="mailto:xxx@xxx.com">xxx@xxx.com</a>“</li><li>git config -l</li></ul></li><li><p>修改_config.yml配置文件,需要指定github地址。hexo d部署。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
